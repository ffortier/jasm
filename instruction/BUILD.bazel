load("@rules_python//python:defs.bzl", "py_binary")
load("@pypi//:requirements.bzl", "requirement")

java_library(
    name = "instruction",
    srcs = [":instruction_java"],
    visibility = ["//visibility:public"],
    deps = ["//common"],
)

py_binary(
    name = "instructions_codegen",
    srcs = [
        ":srcs",
        "//instruction/java",
    ],
    deps = [
        requirement("pandas"),
    ],
)

genrule(
    name = "instruction_java",
    srcs = [":instructions_csv"],
    outs = ["src/main/java/jasm/instruction/Instruction.java"],
    cmd = "$(location :instructions_codegen) -i $< -o $@ -c Instruction -p jasm.instruction",
    tools = [":instructions_codegen"],
)

cc_binary(
    name = "wasm_opcodes",
    srcs = [
        "wasm-opcodes.c",
        "//third_party/v8:wasm_opcodes_h",
    ],
    copts = ["-I$(BINDIR)/third_party/v8"],
)

genrule(
    name = "instructions_csv",
    outs = ["instructions.csv"],
    cmd = "$(location :wasm_opcodes) > $@",
    tools = [":wasm_opcodes"],
)

sh_test(
    name = "mypy",
    srcs = ["mypy.sh"],
    args = [
        "--config-file",
        "$(location mypy.ini)",
        "$(locations :srcs)",
    ],
    data = [
        "mypy.ini",
        ":srcs",
        "//instruction/java:srcs",
    ],
)

filegroup(
    name = "srcs",
    srcs = glob(["*.py"]),
    visibility = ["//instruction:__subpackages__"],
)
